name: Create VU1 Server release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    release:
      types: [created, updated]

permissions:
  contents: write

jobs:
  Release:

    runs-on: windows-latest

    env:
      App_Packages_Archive: VU1_Server

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        update-environment: true
        cache: 'pip' # caching pip dependencies

    # Install python requirements
    - run: pip install -r requirements.txt

    # Create artifacts folder
    - name: Create Artifact Folder
      run: New-Item -Path '${{ github.workspace }}' -Name "Artifacts" -ItemType "directory"

    - name: Set pythonpath
      run: |
        echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Add version stamp
      run: |
        python3 ${{ github.workspace }}/make_version.py

    # PyInstaller
    - run: >
          pyinstaller.exe --name VUServer
          --distpath="${{ github.workspace }}/Artifacts"
          --clean
          --path="${{ github.workspace }}"
          --icon="www/favicon.ico"
          --add-data="config.yaml;."
          --add-data="www/assets/css/*;www/assets/css"
          --add-data="www/assets/img/*;www/assets/img"
          --add-data="www/assets/js/*;www/assets/js"
          --add-data="www/views/*;www/views"
          --add-data="www/*.png;www/"
          --add-data="www/*.html;www/"
          --add-data="www/*.ico;www/"
          --add-data="upload/img_blank;upload/"
          --hiddenimport="pywin32"
          --hiddenimport="win32timezone"
          --uac-admin
          --noconsole
          server.py

    - uses: ksm2/archive-action@v1
      id: archive
      with:
        format: "zip"
        name: VU_Server
        root-directory: ${{ github.workspace }}\Artifacts\VUServer

    - name: Archive Release
          uses: thedoctor0/zip-release@0.7.5
          with:
            type: 'zip'
            directory: ${{ github.workspace }}\Artifacts\VUServer
            filename: 'VUServer.zip'
            exclusions: '*.git* /*node_modules/* .editorconfig'

    # We are currently limited to offline signing.
    # So we are skipping the online installer creation
    ## Install NSIS
    #- name: Install NSIS
    #  run: |
    #    choco install nsis
    #
    #- name: Create installer
    #  run: |
    #    makensis /DINSTALLEROUTPUT="${{ github.workspace }}\Artifacts\VU1-Installer.exe" /DDIRDIST="${{ github.workspace }}\Artifacts\VUServer" /DDIRSOURCE="${{ github.workspace }}" ${{ github.workspace }}\installer\install.nsi


    ## Upload installer
    #- name: Upload build artifact
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: ${{ env.App_Packages_Archive }}_installer.exe
    #    path: ${{ github.workspace }}/Artifacts/VU1-Installer.exe
    #  if: ${{ always() }}

    # Create the release: https://github.com/softprops/action-gh-release
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ github.workspace }}\Artifacts\VUServer\VUServer.zip
        draft: true
        body: |
          Changes in this Release
          - First Change
          - Second Change
